{"ast":null,"code":"var _jsxFileName = \"C:\\\\chhelu 1\\\\api\\\\cli\\\\frontend\\\\src\\\\pages\\\\KYCPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport KYCForm from '../components/KYCForm';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KYCPage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    fetchUser();\n  }, []);\n  const fetchUser = async () => {\n    try {\n      const response = await authAPI.getProfile();\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error fetching user:', error);\n    }\n  };\n  const handleUpdate = () => {\n    fetchUser();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: '30px',\n        color: '#2c3e50'\n      },\n      children: \"KYC Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(KYCForm, {\n      user: user,\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(KYCPage, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = KYCPage;\nexport default KYCPage;\nvar _c;\n$RefreshReg$(_c, \"KYCPage\");","map":{"version":3,"names":["React","useState","useEffect","KYCForm","authAPI","jsxDEV","_jsxDEV","KYCPage","_s","user","setUser","fetchUser","response","getProfile","data","error","console","handleUpdate","style","padding","maxWidth","margin","children","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","_c","$RefreshReg$"],"sources":["C:/chhelu 1/api/cli/frontend/src/pages/KYCPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport KYCForm from '../components/KYCForm';\nimport { authAPI } from '../services/api';\n\nconst KYCPage = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  const fetchUser = async () => {\n    try {\n      const response = await authAPI.getProfile();\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error fetching user:', error);\n    }\n  };\n\n  const handleUpdate = () => {\n    fetchUser();\n  };\n\n  return (\n    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\n      <h1 style={{ marginBottom: '30px', color: '#2c3e50' }}>KYC Verification</h1>\n      {user && <KYCForm user={user} onUpdate={handleUpdate} />}\n    </div>\n  );\n};\n\nexport default KYCPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,UAAU,CAAC,CAAC;MAC3CH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBN,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACEL,OAAA;IAAKY,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACpEhB,OAAA;MAAIY,KAAK,EAAE;QAAEK,YAAY,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAF,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3EnB,IAAI,iBAAIH,OAAA,CAACH,OAAO;MAACM,IAAI,EAAEA,IAAK;MAACoB,QAAQ,EAAEZ;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1BID,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}