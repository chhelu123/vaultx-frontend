{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = '/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials)\n};\nexport const tradingAPI = {\n  getPrice: () => api.get('/trading/price'),\n  buyUSDT: amount => api.post('/trading/buy', {\n    amount\n  }),\n  sellUSDT: amount => api.post('/trading/sell', {\n    amount\n  }),\n  getTransactions: () => api.get('/trading/transactions')\n};\nexport const walletAPI = {\n  getWalletInfo: () => api.get('/wallet/info'),\n  requestDeposit: data => api.post('/wallet/deposit', data),\n  getDeposits: () => api.get('/wallet/deposits'),\n  requestWithdrawal: data => api.post('/wallet/withdraw', data),\n  getWithdrawals: () => api.get('/wallet/withdrawals')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authAPI","register","userData","post","login","credentials","tradingAPI","getPrice","get","buyUSDT","amount","sellUSDT","getTransactions","walletAPI","getWalletInfo","requestDeposit","data","getDeposits","requestWithdrawal","getWithdrawals"],"sources":["C:/chhelu 1/api/cli/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = '/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n};\n\nexport const tradingAPI = {\n  getPrice: () => api.get('/trading/price'),\n  buyUSDT: (amount) => api.post('/trading/buy', { amount }),\n  sellUSDT: (amount) => api.post('/trading/sell', { amount }),\n  getTransactions: () => api.get('/trading/transactions'),\n};\n\nexport const walletAPI = {\n  getWalletInfo: () => api.get('/wallet/info'),\n  requestDeposit: (data) => api.post('/wallet/deposit', data),\n  getDeposits: () => api.get('/wallet/deposits'),\n  requestWithdrawal: (data) => api.post('/wallet/withdraw', data),\n  getWithdrawals: () => api.get('/wallet/withdrawals'),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,MAAM;AAE3B,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEFC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IAAKd,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAC5DE,KAAK,EAAGC,WAAW,IAAKjB,GAAG,CAACe,IAAI,CAAC,aAAa,EAAEE,WAAW;AAC7D,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG;EACxBC,QAAQ,EAAEA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,gBAAgB,CAAC;EACzCC,OAAO,EAAGC,MAAM,IAAKtB,GAAG,CAACe,IAAI,CAAC,cAAc,EAAE;IAAEO;EAAO,CAAC,CAAC;EACzDC,QAAQ,EAAGD,MAAM,IAAKtB,GAAG,CAACe,IAAI,CAAC,eAAe,EAAE;IAAEO;EAAO,CAAC,CAAC;EAC3DE,eAAe,EAAEA,CAAA,KAAMxB,GAAG,CAACoB,GAAG,CAAC,uBAAuB;AACxD,CAAC;AAED,OAAO,MAAMK,SAAS,GAAG;EACvBC,aAAa,EAAEA,CAAA,KAAM1B,GAAG,CAACoB,GAAG,CAAC,cAAc,CAAC;EAC5CO,cAAc,EAAGC,IAAI,IAAK5B,GAAG,CAACe,IAAI,CAAC,iBAAiB,EAAEa,IAAI,CAAC;EAC3DC,WAAW,EAAEA,CAAA,KAAM7B,GAAG,CAACoB,GAAG,CAAC,kBAAkB,CAAC;EAC9CU,iBAAiB,EAAGF,IAAI,IAAK5B,GAAG,CAACe,IAAI,CAAC,kBAAkB,EAAEa,IAAI,CAAC;EAC/DG,cAAc,EAAEA,CAAA,KAAM/B,GAAG,CAACoB,GAAG,CAAC,qBAAqB;AACrD,CAAC;AAED,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}